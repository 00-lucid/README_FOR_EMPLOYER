# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Deploy to Dev
on:
  push:
    branches: [ "release/v0.1" ]
    
permissions:
  contents: read
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |  # Gradle의 종속성과 wrapper를 캐시하는 디렉토리
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}  
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Configure application credentials
      run: echo "${{ secrets.APPLICATION_DEV }}" > ./server/src/main/resources/application-dev.yml
        
    - name: Build with Gradle
      working-directory: ./server
      run: ./gradlew build
      
    - name: Make Zip File
      run: zip -qq -r ./code-deploy-dev.zip appspec.yml scripts ./server/build/libs/server-0.0.1-SNAPSHOT.jar

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: code-deploy-dev
        path: ./code-deploy-dev.zip


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: code-deploy-dev
        path: .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
        
    - name: Upload to S3
      run: |
        aws s3 cp ./code-deploy-dev.zip s3://deploy-quokka/code-deploy-dev.zip
        
    - name: Deploy to EC2 using CodeDeploy
      run: |
        aws deploy create-deployment \
          --application-name quokka \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name codeDeploy \
          --s3-location bucket=deploy-quokka,bundleType=zip,key=code-deploy-dev.zip
          
