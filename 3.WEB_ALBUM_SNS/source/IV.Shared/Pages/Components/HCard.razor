@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@* HCard.razor *@
<div class="h-card"
     style="
         width: @(Width ?? "auto");
     height: @(Height ?? "auto");
     @((IsAspectRatio) ? $"aspect-ratio: 3/2;" : "")
     @((!string.IsNullOrEmpty(ImageUrl))
         ? $"background: url('{ImageUrl + "?" + Configuration.GetConnectionString("BlobStorageToken")}') no-repeat center center / cover;"
         : "")
     @((!string.IsNullOrEmpty(Padding)) ? $"padding: {Padding};" : "")
     "
     @onclick="HandleClick">
    <!-- Card Header -->
    <div class="h-card-header">
        <h3 class="h-card-title">@Title</h3>
        <p class="h-card-subtitle">@Subtitle</p>
    </div>
    @ChildContent
</div>

@code {
    [Parameter] public string Title { get; set; } = "";
    [Parameter] public string Subtitle { get; set; } = "";
    [Parameter] public string? Width { get; set; }
    [Parameter] public string? Height { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }
    [Parameter] public bool IsAspectRatio { get; set; } = true;
    
    [Parameter]
    public string? ImageUrl { get; set; }

    [Parameter]
    public string? Padding { get; set; }
    
    private async Task HandleClick(MouseEventArgs args)
    {
        if (OnClick.HasDelegate)
        {
            await OnClick.InvokeAsync(args);
        }
    }
}