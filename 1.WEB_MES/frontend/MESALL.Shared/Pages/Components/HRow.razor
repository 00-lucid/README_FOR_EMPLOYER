@inherits LayoutComponentBase

<div class="@Class" style="@InlineStyle">
    @ChildContent
</div>

@code {
    [Parameter]
    public string Gap { get; set; } = "0"; // 자식 요소 간 거리 (기본값: 0px)

    [Parameter]
    public string AlignItems { get; set; } = "stretch"; // align-items 기본값

    [Parameter]
    public string JustifyContent { get; set; } = "flex-start"; // justify-content 기본값

    [Parameter]
    public bool IsWrapped { get; set; } = false; // flex-wrap 옵션 추가

    [Parameter]
    public string Padding { get; set; } = "0"; // 패딩 옵션 추가

    [Parameter]
    public string Width { get; set; } = "100%"; // 너비 속성 추가 (기본값: 100%)

    [Parameter]
    public bool AutoWidth { get; set; } = false; // 콘텐츠 너비에 맞게 자동 조정 (기본값: false)

    [Parameter]
    public RenderFragment? ChildContent { get; set; } // 자식 요소

    [Parameter]
    public string? Class { get; set; }
    
    private string InlineStyle => string.Join(" ", new string?[]
    {
        "display: flex;",
        AutoWidth ? "width: auto; flex: 0 auto;" : $"width: {Width};",
        "flex-direction: row;",
        $"flex-wrap: {(IsWrapped ? "wrap" : "nowrap")};",
        $"gap: {Gap};",
        $"align-items: {AlignItems};",
        $"justify-content: {JustifyContent};",
        $"padding: {Padding};" // 패딩 스타일 추가
    }.Where(style => !string.IsNullOrEmpty(style)));
}